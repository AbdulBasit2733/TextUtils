{"ast":null,"code":"import _slicedToArray from\"C:/Users/Abdulbasit2003/Desktop/React/TextUtils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function TextForm(props){var handleUpClick=function handleUpClick(){//console.log(\"UpperCase was clicked\");\nvar newText=text.toUpperCase();setText(newText);props.showAlert(\"Converted to Upper case\",\"success\");};var handleOnChange=function handleOnChange(event){// This is for typing in textArea without it i am not able to change the text int the field\n//console.log(\"Handled On Change\");\nsetText(event.target.value);};var handleLowClick=function handleLowClick(){var newText=text.toLowerCase();setText(newText);props.showAlert(\"Converted to lower case\",\"success\");};var handleTitleCaseClick=function handleTitleCaseClick(){var arr=text.split(\" \");for(var i=0;i<arr.length;i++){arr[i]=arr[i].charAt(0).toUpperCase()+arr[i].slice(1);}var newText=arr.join(\" \");setText(newText);props.showAlert(\"Converted to Title case\",\"success\");};var handleTextClear=function handleTextClear(){var newText=\" \";setText(newText);props.showAlert(\"Text has been cleared\",\"success\");};var handleCopy=function handleCopy(){var text=document.getElementById(\"myBox\");text.select();navigator.clipboard.writeText(text.value);props.showAlert(\"Copy to clipboard\",\"success\");};var handleExtraSpaces=function handleExtraSpaces(){var newText=text.split(/[ ]+/);setText(newText.join(\" \"));props.showAlert(\"Extra spaces has been removed\",\"success\");};var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];// text=\"new text\"; // Wrong way to do it\n//setText(\"New Text\"); // Correct way to change the state\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{color:props.mode==='dark'?'white':'#042743'},children:[/*#__PURE__*/_jsx(\"h1\",{children:props.heading}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",id:\"myBox\",rows:\"8\",value:text,style:{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'},onChange:handleOnChange})}),/*#__PURE__*/_jsx(\"button\",{className:\"button btn btn-primary mx-1\",onClick:handleUpClick,children:\"Convert to upper case\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button btn btn-primary mx-1\",onClick:handleLowClick,children:\"Convert to lowerCase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button btn btn-primary mx-1\",onClick:handleTitleCaseClick,children:\"Convert to Title Case\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button btn btn-primary mx-1\",onClick:handleTextClear,children:\"Clear Text\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button btn btn-primary mx-1\",onClick:handleCopy,children:\"Copy text\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button btn btn-primary mx-1 my-2\",onClick:handleExtraSpaces,children:\"Remove Extra spaces\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container my-4\",style:{color:props.mode==='dark'?'white':'#042743'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Text summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[text.split(\" \").length,\" words and \",text.length,\" characters\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[0.008*text.split(\" \").length,\" Minutes read\"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Preview\"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>0?text:\"Enter something above the textbox to preview it here\"})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleOnChange","event","target","value","handleLowClick","toLowerCase","handleTitleCaseClick","arr","split","i","length","charAt","slice","join","handleTextClear","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","_useState","_useState2","_slicedToArray","children","className","style","color","mode","heading","id","rows","backgroundColor","onChange","onClick"],"sources":["C:/Users/Abdulbasit2003/Desktop/React/TextUtils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    //console.log(\"UpperCase was clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper case\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // This is for typing in textArea without it i am not able to change the text int the field\r\n    //console.log(\"Handled On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lower case\", \"success\");\r\n  };\r\n\r\n  const handleTitleCaseClick = () => {\r\n    const arr = text.split(\" \");\r\n    for (var i = 0; i < arr.length; i++) {\r\n      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n    }\r\n    let newText = arr.join(\" \");\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Title case\", \"success\");\r\n  };\r\n\r\n  const handleTextClear = () => {\r\n    let newText = \" \";\r\n    setText(newText);\r\n    props.showAlert(\"Text has been cleared\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copy to clipboard\", \"success\");\r\n  }\r\n\r\n  const handleExtraSpaces = ()=> {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces has been removed\", \"success\");\r\n  }\r\n\r\n\r\n  const [text, setText] = useState(\"\");\r\n  // text=\"new text\"; // Wrong way to do it\r\n  //setText(\"New Text\"); // Correct way to change the state\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}\r\n\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"button btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert to upper case\r\n        </button>\r\n        <button\r\n          className=\"button btn btn-primary mx-1\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to lowerCase\r\n        </button>\r\n        <button\r\n          className=\"button btn btn-primary mx-1\"\r\n          onClick={handleTitleCaseClick}\r\n        >\r\n          Convert to Title Case\r\n        </button>\r\n        <button\r\n          className=\"button btn btn-primary mx-1\"\r\n          onClick={handleTextClear}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          className=\"button btn btn-primary mx-1\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy text\r\n        </button>\r\n        <button\r\n          className=\"button btn btn-primary mx-1 my-2\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra spaces\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-4\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your Text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something above the textbox to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}