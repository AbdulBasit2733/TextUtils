{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abdulbasit2003\\\\Desktop\\\\React\\\\TextUtils\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    //console.log(\"UpperCase was clicked\");\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    // This is for typing in textArea without it i am not able to change the text int the field\n    //console.log(\"Handled On Change\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"Enter text here\");\n  // text=\"new text\"; // Wrong way to do it\n  //setText(\"New Text\"); // Correct way to change the state\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"myBox\",\n          rows: \"8\",\n          value: text,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Convert to upper case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"cyRA+wM30maxU5PkXk20ENEQ1FU=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","newText","text","toUpperCase","setText","handleOnChange","event","target","value","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Abdulbasit2003/Desktop/React/TextUtils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    //console.log(\"UpperCase was clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // This is for typing in textArea without it i am not able to change the text int the field\r\n    //console.log(\"Handled On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  // text=\"new text\"; // Wrong way to do it\r\n  //setText(\"New Text\"); // Correct way to change the state\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"button btn btn-primary\" onClick={handleUpClick}>\r\n          Convert to upper case\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,WAAW,EAAE;IAChCC,OAAO,CAACH,OAAO,CAAC;EAClB,CAAC;EACD,MAAMI,cAAc,GAAIC,KAAK,IAAK;IAChC;IACA;IACAF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAM,CAACN,IAAI,EAAEE,OAAO,CAAC,GAAGZ,QAAQ,CAAC,iBAAiB,CAAC;EACnD;EACA;EACA,oBACEE,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBf,OAAA;QAAAe,QAAA,EAAKX,KAAK,CAACa;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACxBrB,OAAA;QAAKgB,SAAS,EAAC,MAAM;QAAAD,QAAA,eACnBf,OAAA;UACEgB,SAAS,EAAC,cAAc;UACxBM,EAAE,EAAC,OAAO;UACVC,IAAI,EAAC,GAAG;UACRT,KAAK,EAAEN,IAAK;UACZgB,QAAQ,EAAEb;QAAe;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACf;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,eACNrB,OAAA;QAAQgB,SAAS,EAAC,wBAAwB;QAACS,OAAO,EAAEnB,aAAc;QAAAS,QAAA,EAAC;MAEnE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNrB,OAAA;MAAKgB,SAAS,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEpB;EAAA,gBACL;AAEP;AAAChB,EAAA,CArCuBF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}